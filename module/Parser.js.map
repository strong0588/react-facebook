{"version":3,"sources":["../src/Parser.jsx"],"names":["React","Component","Initialize","Parser","state","handleReady","api","setState","handleParse","handleContainer","container","parse","render","className","children","props","defaultProps","undefined"],"mappings":"AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAA4C,OAA5C;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAYA,eAAe,MAAMC,MAAN,SAAqBF,SAArB,CAA6C;AAAA;AAAA;;AAAA,wCAK1DG,KAL0D,GAK3C,EAL2C,OAO1DC,WAP0D,GAO3CC,GAAD,IAAuB;AACnC,WAAKC,QAAL,CAAc;AACZD;AADY,OAAd,EAEG,KAAKE,WAFR;AAGD,KAXyD,OAa1DC,eAb0D,GAavCC,SAAD,IAA2B;AAC3C,WAAKH,QAAL,CAAc;AACZG;AADY,OAAd,EAEG,KAAKF,WAFR;AAGD,KAjByD,OAmB1DA,WAnB0D,GAmB5C,MAAY;AACxB,YAAM,EAAEF,GAAF,EAAOI,SAAP,KAAqB,KAAKN,KAAhC;AACA,UAAI,CAACE,GAAD,IAAQ,CAACI,SAAb,EAAwB;AACtB;AACD;;AAEDJ,UAAIK,KAAJ,CAAUD,SAAV;AACD,KA1ByD;AAAA;;AA4B1DE,WAAS;AACP,UAAM,EAAEC,SAAF,EAAaC,QAAb,KAA0B,KAAKC,KAArC;;AAEA,WACE;AAAA;AAAA,QAAK,WAAWF,SAAhB,EAA2B,KAAK,KAAKJ,eAArC;AACE;AAAC,kBAAD;AAAA,UAAY,SAAS,KAAKJ,WAA1B;AACGS,iBAAS;AACRN,uBAAa,KAAKA;AADV,SAAT;AADH;AADF,KADF;AASD;AAxCyD;AAAvCL,M,CACZa,Y,GAAe;AACpBH,aAAWI;AADS,C","file":"Parser.js","sourcesContent":["// @flow\r\nimport React, { Component, type Node } from 'react';\r\nimport Initialize from './Initialize';\r\n\r\ntype Props = {\r\n  className?: string,\r\n  children: Function,\r\n};\r\n\r\ntype State = {\r\n  api?: Object,\r\n  container?: Node,\r\n};\r\n\r\nexport default class Parser extends Component<Props, State> {\r\n  static defaultProps = {\r\n    className: undefined,\r\n  };\r\n\r\n  state: State = {};\r\n\r\n  handleReady = (api: Object): void => {\r\n    this.setState({\r\n      api,\r\n    }, this.handleParse);\r\n  }\r\n\r\n  handleContainer = (container: Node): void => {\r\n    this.setState({\r\n      container,\r\n    }, this.handleParse);\r\n  }\r\n\r\n  handleParse = (): void => {\r\n    const { api, container } = this.state;\r\n    if (!api || !container) {\r\n      return;\r\n    }\r\n\r\n    api.parse(container);\r\n  }\r\n\r\n  render() {\r\n    const { className, children } = this.props;\r\n\r\n    return (\r\n      <div className={className} ref={this.handleContainer}>\r\n        <Initialize onReady={this.handleReady}>\r\n          {children({\r\n            handleParse: this.handleParse,\r\n          })}\r\n        </Initialize>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]}