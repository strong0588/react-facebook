{"version":3,"sources":["../src/Status.jsx"],"names":["api","response","getLoginStatus","status","React","Component","Initialize","Subscribe","Status","state","loading","handleReady","setState","handleStatusChange","render","children","props"],"mappings":";;;+BAKA,WAA8BA,GAA9B,EAA4D;AAC1D,UAAMC,WAAW,MAAMD,IAAIE,cAAJ,EAAvB;;AAEA,WAAOD,SAASE,MAAhB;AACD,G;;kBAJcD,c;;;;;AAJf,OAAOE,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAiBA,eAAe,MAAMC,MAAN,SAAqBH,SAArB,CAA6C;AAAA;AAAA;;AAAA,gDAC1DI,KAD0D,GAC3C;AACbC,eAAS;AADI,KAD2C,OAK1DC,WAL0D;AAAA,oCAK5C,WAAOX,GAAP,EAAsC;AAClD,cAAKY,QAAL,CAAc;AACZT,kBAAQ,MAAMD,eAAeF,GAAf,CADF;AAEZU,mBAAS;AAFG,SAAd;AAID,OAVyD;;AAAA;AAAA;AAAA;AAAA,eAY1DG,kBAZ0D,GAYpCZ,QAAD,IAA4B;AAC/C,WAAKW,QAAL,CAAc;AACZT,gBAAQF,SAASE,MADL;AAEZO,iBAAS;AAFG,OAAd;AAID,KAjByD;AAAA;;AAmB1DI,WAAS;AACP,UAAM,EAAEC,QAAF,KAAe,KAAKC,KAA1B;AACA,UAAM,EAAEb,MAAF,EAAUO,OAAV,KAAsB,KAAKD,KAAjC;;AAEA,WACE;AAAC,gBAAD;AAAA,QAAY,SAAS,KAAKE,WAA1B;AACE;AAAC,iBAAD;AAAA,UAAW,OAAM,mBAAjB,EAAqC,UAAU,KAAKE,kBAApD;AACGE,iBAAS;AACRZ,gBADQ;AAERO;AAFQ,SAAT;AADH;AADF,KADF;AAUD;AAjCyD","file":"Status.js","sourcesContent":["// @flow\r\nimport React, { Component } from 'react';\r\nimport Initialize from './Initialize';\r\nimport Subscribe from './Subscribe';\r\n\r\nasync function getLoginStatus(api: Object): Promise<string> {\r\n  const response = await api.getLoginStatus();\r\n\r\n  return response.status;\r\n}\r\n\r\ntype Props = {\r\n  children: Function,\r\n};\r\n\r\ntype State = {\r\n  loading: Boolean,\r\n  status?: undefined,\r\n};\r\n\r\nexport default class Status extends Component<Props, State> {\r\n  state: State = {\r\n    loading: true,\r\n  };\r\n\r\n  handleReady = async (api: Object): Promise<void> => {\r\n    this.setState({\r\n      status: await getLoginStatus(api),\r\n      loading: false,\r\n    });\r\n  }\r\n\r\n  handleStatusChange = (response: Object): void => {\r\n    this.setState({\r\n      status: response.status,\r\n      loading: false,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n    const { status, loading } = this.state;\r\n\r\n    return (\r\n      <Initialize onReady={this.handleReady}>\r\n        <Subscribe event=\"auth.statusChange\" onChange={this.handleStatusChange}>\r\n          {children({\r\n            status,\r\n            loading,\r\n          })}\r\n        </Subscribe>\r\n      </Initialize>\r\n    );\r\n  }\r\n}\r\n"]}