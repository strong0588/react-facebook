{"version":3,"sources":["../src/Status.jsx"],"names":["api","getLoginStatus","response","status","Status","state","loading","handleReady","setState","handleStatusChange","render","children","props","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;sFAKA,iBAA8BA,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACyBA,IAAIC,cAAJ,EADzB;;AAAA;AACQC,oBADR;AAAA,6CAGSA,SAASC,MAHlB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeF,c;;;;;AAJf;;;;AACA;;;;AACA;;;;;;IAiBqBG,M;;;;;;;;;;;;;;0JACnBC,K,GAAe;AACbC,eAAS;AADI,K,QAIfC,W;2FAAc,kBAAOP,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEIC,eAAeD,GAAf,CAFJ;;AAAA;AAAA;AAAA;AAEVG,wBAFU;AAGVG,yBAHU,EAGD;AAHC;;AAAA,6BACPE,QADO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;eAOdC,kB,GAAqB,UAACP,QAAD,EAA4B;AAC/C,YAAKM,QAAL,CAAc;AACZL,gBAAQD,SAASC,MADL;AAEZG,iBAAS;AAFG,OAAd;AAID,K;;;mBAEDI,M,qBAAS;AAAA,QACCC,QADD,GACc,KAAKC,KADnB,CACCD,QADD;AAAA,iBAEqB,KAAKN,KAF1B;AAAA,QAECF,MAFD,UAECA,MAFD;AAAA,QAESG,OAFT,UAESA,OAFT;;;AAIP,WACE;AAAC,0BAAD;AAAA,QAAY,SAAS,KAAKC,WAA1B;AACE;AAAC,2BAAD;AAAA,UAAW,OAAM,mBAAjB,EAAqC,UAAU,KAAKE,kBAApD;AACGE,iBAAS;AACRR,wBADQ;AAERG;AAFQ,SAAT;AADH;AADF,KADF;AAUD,G;;;EAjCiCO,gB;;kBAAfT,M","file":"Status.js","sourcesContent":["// @flow\r\nimport React, { Component } from 'react';\r\nimport Initialize from './Initialize';\r\nimport Subscribe from './Subscribe';\r\n\r\nasync function getLoginStatus(api: Object): Promise<string> {\r\n  const response = await api.getLoginStatus();\r\n\r\n  return response.status;\r\n}\r\n\r\ntype Props = {\r\n  children: Function,\r\n};\r\n\r\ntype State = {\r\n  loading: Boolean,\r\n  status?: undefined,\r\n};\r\n\r\nexport default class Status extends Component<Props, State> {\r\n  state: State = {\r\n    loading: true,\r\n  };\r\n\r\n  handleReady = async (api: Object): Promise<void> => {\r\n    this.setState({\r\n      status: await getLoginStatus(api),\r\n      loading: false,\r\n    });\r\n  }\r\n\r\n  handleStatusChange = (response: Object): void => {\r\n    this.setState({\r\n      status: response.status,\r\n      loading: false,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n    const { status, loading } = this.state;\r\n\r\n    return (\r\n      <Initialize onReady={this.handleReady}>\r\n        <Subscribe event=\"auth.statusChange\" onChange={this.handleStatusChange}>\r\n          {children({\r\n            status,\r\n            loading,\r\n          })}\r\n        </Subscribe>\r\n      </Initialize>\r\n    );\r\n  }\r\n}\r\n"]}