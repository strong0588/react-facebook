{"version":3,"sources":["../src/FacebookProvider.jsx"],"names":["FacebookContext","api","Facebook","state","isReady","handleInit","canUseDOM","Error","props","domain","version","appId","cookie","status","xfbml","language","frictionlessRequests","wait","FB","init","setState","componentDidMount","render","children","error","value","Component","defaultProps","undefined"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEO,IAAMA,4CAAkB,2BAAxB;AACP,IAAIC,MAAM,IAAV;;IAmBqBC,Q;;;;;;;;;;;;;;0JAanBC,K,GAAe;AACbC,eAAS;AADI,K,QAWfC,U,4EAAa;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,kBAENC,mBAFM;AAAA;AAAA;AAAA;;AAAA,oBAGH,IAAIC,KAAJ,CAAU,sCAAV,CAHG;;AAAA;AAMHH,qBANG,GAMS,MAAKD,KANd,CAMHC,OANG;;AAAA,mBAOPA,OAPO;AAAA;AAAA;AAAA;;AAAA,+CAQFH,GARE;;AAAA;;AAWX,kBAAI,CAACA,GAAL,EAAU;AAAA,8BAWJ,MAAKO,KAXD,EAENC,OAFM,eAENA,MAFM,EAGNC,QAHM,eAGNA,OAHM,EAINC,MAJM,eAINA,KAJM,EAKNC,OALM,eAKNA,MALM,EAMNC,OANM,eAMNA,MANM,EAONC,MAPM,eAONA,KAPM,EAQNC,SARM,eAQNA,QARM,EASNC,qBATM,eASNA,oBATM,EAUNC,KAVM,eAUNA,IAVM;;;AAaRhB,sBAAM,IAAIiB,kBAAJ,CAAO;AACXT,iCADW;AAEXE,+BAFW;AAGXD,mCAHW;AAIXE,iCAJW;AAKXC,iCALW;AAMXC,+BANW;AAOXC,qCAPW;AAQXC,6DARW;AASXC;AATW,iBAAP,CAAN;AAWD;;AAnCU;AAAA,qBAqCLhB,IAAIkB,IAAJ,EArCK;;AAAA;;AAuCX,kBAAI,CAAC,MAAKhB,KAAL,CAAWC,OAAhB,EAAyB;AACvB,sBAAKgB,QAAL,CAAc;AACZhB,2BAAS;AADG,iBAAd;AAGD;;AA3CU,+CA6CJH,GA7CI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;qBAPboB,iB,gCAA0B;AAAA,QAChBJ,IADgB,GACP,KAAKT,KADE,CAChBS,IADgB;;AAExB,QAAI,CAACA,IAAL,EAAW;AACT,WAAKZ,UAAL;AACD;AACF,G;;qBAkDDiB,M,qBAAS;AAAA,QACCC,QADD,GACc,KAAKf,KADnB,CACCe,QADD;AAAA,iBAEoB,KAAKpB,KAFzB;AAAA,QAECC,OAFD,UAECA,OAFD;AAAA,QAEUoB,KAFV,UAEUA,KAFV;AAAA,QAGCnB,UAHD,GAGgB,IAHhB,CAGCA,UAHD;;;AAKP,QAAMoB,QAAQ;AACZrB,sBADY;AAEZoB,kBAFY;AAGZnB,4BAHY;AAIZJ;AAJY,KAAd;;AAOA,WACE;AAAC,qBAAD,CAAiB,QAAjB;AAAA,QAA0B,OAAOwB,KAAjC;AACGF;AADH,KADF;AAKD,G;;;EAzFmCG,gB,UAC7BC,Y,GAAe;AACpBjB,WAAS,MADW;AAEpBE,UAAQ,KAFY;AAGpBC,UAAQ,KAHY;AAIpBC,SAAO,KAJa;AAKpBC,YAAU,OALU;AAMpBC,wBAAsB,KANF;AAOpBP,UAAQ,sBAPY;AAQpBc,YAAUK,SARU;AASpBX,QAAM;AATc,C;kBADHf,Q","file":"FacebookProvider.js","sourcesContent":["// @flow\r\nimport React, { Component, createContext, type Node } from 'react';\r\nimport canUseDOM from 'can-use-dom';\r\nimport FB from './Facebook';\r\n\r\nexport const FacebookContext = createContext();\r\nlet api = null;\r\n\r\ntype Props = {\r\n  appId: string,\r\n  domain?: string,\r\n  version?: string,\r\n  cookie?: boolean,\r\n  status?: boolean,\r\n  xfbml?: boolean,\r\n  language?: string,\r\n  frictionlessRequests?: boolean,\r\n  children?: Node,\r\n  wait?: boolean,\r\n};\r\n\r\ntype State = {\r\n  isReady: boolean,\r\n};\r\n\r\nexport default class Facebook extends Component<Props, State> {\r\n  static defaultProps = {\r\n    version: 'v3.1',\r\n    cookie: false,\r\n    status: false,\r\n    xfbml: false,\r\n    language: 'en_US',\r\n    frictionlessRequests: false,\r\n    domain: 'connect.facebook.net',\r\n    children: undefined,\r\n    wait: false,\r\n  };\r\n\r\n  state: State = {\r\n    isReady: false,\r\n  };\r\n\r\n  componentDidMount(): void {\r\n    const { wait } = this.props;\r\n    if (!wait) {\r\n      this.handleInit();\r\n    }\r\n  }\r\n\r\n  handleInit = async (): Promise<FB> => {\r\n    // do not run if SSR\r\n    if (!canUseDOM) {\r\n      throw new Error('You can not use Facebook without DOM');\r\n    }\r\n\r\n    const { isReady } = this.state;\r\n    if (isReady) {\r\n      return api;\r\n    }\r\n\r\n    if (!api) {\r\n      const {\r\n        domain,\r\n        version,\r\n        appId,\r\n        cookie,\r\n        status,\r\n        xfbml,\r\n        language,\r\n        frictionlessRequests,\r\n        wait,\r\n      } = this.props;\r\n\r\n      api = new FB({\r\n        domain,\r\n        appId,\r\n        version,\r\n        cookie,\r\n        status,\r\n        xfbml,\r\n        language,\r\n        frictionlessRequests,\r\n        wait,\r\n      });\r\n    }\r\n\r\n    await api.init();\r\n\r\n    if (!this.state.isReady) {\r\n      this.setState({\r\n        isReady: true,\r\n      });\r\n    }\r\n\r\n    return api;\r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n    const { isReady, error } = this.state;\r\n    const { handleInit } = this;\r\n\r\n    const value = {\r\n      isReady,\r\n      error,\r\n      handleInit,\r\n      api,\r\n    };\r\n\r\n    return (\r\n      <FacebookContext.Provider value={value}>\r\n        {children}\r\n      </FacebookContext.Provider>\r\n    );\r\n  }\r\n}\r\n"]}