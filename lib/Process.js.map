{"version":3,"sources":["../src/Process.jsx"],"names":["Process","state","api","undefined","handleProcess","fn","setState","data","error","loading","Error","handleReady","render","children","props","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AACA;;;;AACA;;;;;;IAaqBA,O;;;;;;;;;;;;;;0JACnBC,K,GAAe;AACbC,WAAKC;AADQ,K,QAIfC,a;0FAAgB,iBAAOC,EAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACd,sBAAKC,QAAL,CAAc;AACZC,wBAAMJ,SADM;AAEZK,yBAAOL,SAFK;AAGZM,2BAAS;AAHG,iBAAd;;AADc;AAQJP,oBARI,GAQI,MAAKD,KART,CAQJC,GARI;;AAAA,oBASPA,IATO;AAAA;AAAA;AAAA;;AAAA,sBAUJ,IAAIQ,KAAJ,CAAU,+CAAV,CAVI;;AAAA;AAAA;AAAA,uBAaOL,GAAGH,IAAH,CAbP;;AAAA;AAaNK,qBAbM;;;AAeZ,sBAAKD,QAAL,CAAc;AACZC,6BADY;AAEZE,2BAAS;AAFG,iBAAd;;AAfY,iDAoBLF,KApBK;;AAAA;AAAA;AAAA;;AAsBZ,sBAAKD,QAAL,CAAc;AACZE,oCADY;AAEZC,2BAAS;AAFG,iBAAd;;AAtBY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;eA+BhBE,W,GAAc,UAACT,GAAD,EAAuB;AACnC,YAAKI,QAAL,CAAc;AACZJ;AADY,OAAd;AAGD,K;;;oBAEDU,M,qBAAS;AAAA,QACCC,QADD,GACc,KAAKC,KADnB,CACCD,QADD;AAAA,iBAIH,KAAKZ,KAJF;AAAA,QAGLC,GAHK,UAGLA,GAHK;AAAA,QAGAO,OAHA,UAGAA,OAHA;AAAA,QAGSF,IAHT,UAGSA,IAHT;AAAA,QAGeC,KAHf,UAGeA,KAHf;;;AAMP,WACE;AAAC,0BAAD;AAAA,QAAY,SAAS,KAAKG,WAA1B;AACGE,eAAS;AACRJ,iBAAS,CAACP,GAAD,IAAQO,OADT;AAERL,uBAAe,KAAKA,aAFZ;AAGRG,kBAHQ;AAIRC;AAJQ,OAAT;AADH,KADF;AAUD,G;;;EA1DkCO,gB;;kBAAhBf,O","file":"Process.js","sourcesContent":["// @flow\r\nimport React, { Component } from 'react';\r\nimport Initialize from './Initialize';\r\n\r\nexport type Props = {\r\n  children: Function,\r\n};\r\n\r\ntype State = {\r\n  api?: Object,\r\n  isProcessing?: boolean,\r\n  error?: Error,\r\n  data?: any,\r\n};\r\n\r\nexport default class Process extends Component<Props, State> {\r\n  state: State = {\r\n    api: undefined,\r\n  };\r\n\r\n  handleProcess = async (fn: Function): Promise<any> => {\r\n    this.setState({\r\n      data: undefined,\r\n      error: undefined,\r\n      loading: true,\r\n    });\r\n\r\n    try {\r\n      const { api } = this.state;\r\n      if (!api) {\r\n        throw new Error('Facebook is not initialized. Wait for isReady');\r\n      }\r\n\r\n      const data = await fn(api);\r\n\r\n      this.setState({\r\n        data,\r\n        loading: false,\r\n      });\r\n\r\n      return data;\r\n    } catch (error) {\r\n      this.setState({\r\n        error,\r\n        loading: false,\r\n      });\r\n\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  handleReady = (api: Object): void => {\r\n    this.setState({\r\n      api,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n    const {\r\n      api, loading, data, error,\r\n    } = this.state;\r\n\r\n    return (\r\n      <Initialize onReady={this.handleReady}>\r\n        {children({\r\n          loading: !api || loading,\r\n          handleProcess: this.handleProcess,\r\n          data,\r\n          error,\r\n        })}\r\n      </Initialize>\r\n    );\r\n  }\r\n}\r\n"]}