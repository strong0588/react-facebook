{"version":3,"sources":["../src/Facebook.js"],"names":["Method","GET","POST","DELETE","Facebook","options","domain","version","cookie","status","xfbml","language","frictionlessRequests","appId","Error","wait","init","getAppId","loadingPromise","Promise","resolve","window","fbAsyncInit","FB","fjs","document","getElementsByTagName","getElementById","js","createElement","id","async","src","parentNode","insertBefore","process","method","before","after","fb","reject","response","error","code","type","message","ui","api","path","params","login","opts","logout","getLoginStatus","getAuthResponse","getTokenDetail","LoginStatus","CONNECTED","authResponse","getProfile","getTokenDetailWithProfile","tokenDetail","profile","getToken","accessToken","getUserId","userID","sendInvite","to","postAction","ogNamespace","ogAction","ogObject","ogObjectUrl","noFeedStory","url","encodeURIComponent","getPermissions","data","hasPermissions","permissions","usersPermissions","findedPermissions","filter","p","currentPermission","find","row","permission","length","subscribe","eventName","callback","Event","unsubscribe","parse","XFBML","getRequests","removeRequest","requestID","setAutoGrow","Canvas","paySimple","product","quantity","action","pay"],"mappings":"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","file":"Facebook.js","sourcesContent":["// @flow\r\nimport LoginStatus from './constants/LoginStatus';\r\n\r\nexport const Method = {\r\n  GET: 'get',\r\n  POST: 'post',\r\n  DELETE: 'delete',\r\n};\r\n\r\nexport default class Facebook {\r\n  constructor(options = {}) {\r\n    this.options = {\r\n      domain: 'connect.facebook.net',\r\n      version: 'v3.1',\r\n      cookie: false,\r\n      status: false,\r\n      xfbml: false,\r\n      language: 'en_US',\r\n      frictionlessRequests: false,\r\n      ...options,\r\n    };\r\n\r\n    if (!this.options.appId) {\r\n      throw new Error('You need to set appId');\r\n    }\r\n\r\n    if (!this.options.wait) {\r\n      this.init();\r\n    }\r\n  }\r\n\r\n  getAppId(): string {\r\n    return this.options.appId;\r\n  }\r\n\r\n  async init() {\r\n    if (this.loadingPromise) {\r\n      return this.loadingPromise;\r\n    }\r\n\r\n    this.loadingPromise = new Promise((resolve) => {\r\n      const { options } = this;\r\n\r\n      window.fbAsyncInit = () => {\r\n        window.FB.init({\r\n          appId: options.appId,\r\n          version: options.version,\r\n          cookie: options.cookie,\r\n          status: options.status,\r\n          xfbml: options.xfbml,\r\n          frictionlessRequests: this.frictionlessRequests,\r\n        });\r\n\r\n        resolve(window.FB);\r\n      };\r\n\r\n      const fjs = window.document.getElementsByTagName('script')[0];\r\n      if (!fjs) {\r\n        return;\r\n      }\r\n\r\n      if (window.document.getElementById('facebook-jssdk')) {\r\n        return;\r\n      }\r\n\r\n      const js = window.document.createElement('script');\r\n      js.id = 'facebook-jssdk';\r\n      js.async = true;\r\n      js.src = `https://${options.domain}/${options.language}/sdk/xfbml.customerchat.js`;\r\n\r\n      fjs.parentNode.insertBefore(js, fjs);\r\n    });\r\n\r\n    return this.loadingPromise;\r\n  }\r\n\r\n  async process(method, before = [], after = []) {\r\n    const fb = await this.init();\r\n\r\n    return new Promise((resolve, reject) => {\r\n      fb[method](...before, (response) => {\r\n        if (!response) {\r\n          reject(new Error('Response is undefined'));\r\n        } else if (response.error) {\r\n          const { code, type, message } = response.error;\r\n\r\n          const error = new Error(message);\r\n          error.code = code;\r\n          error.type = type;\r\n\r\n          reject(error);\r\n        } else {\r\n          resolve(response);\r\n        }\r\n      }, ...after);\r\n    });\r\n  }\r\n\r\n  async ui(options) {\r\n    return this.process('ui', [options]);\r\n  }\r\n\r\n  async api(path, method = Method.GET, params = {}) {\r\n    return this.process('api', [path, method, params]);\r\n  }\r\n\r\n  async login(opts = null) {\r\n    return this.process('login', [], [opts]);\r\n  }\r\n\r\n  async logout() {\r\n    return this.process('logout');\r\n  }\r\n\r\n  async getLoginStatus() {\r\n    return this.process('getLoginStatus');\r\n  }\r\n\r\n  async getAuthResponse() {\r\n    return this.process('getAuthResponse');\r\n  }\r\n\r\n  async getTokenDetail() {\r\n    const response = await this.getLoginStatus();\r\n    if (response.status === LoginStatus.CONNECTED && response.authResponse) {\r\n      return response.authResponse;\r\n    }\r\n\r\n    throw new Error('Token is undefined');\r\n  }\r\n\r\n  async getProfile(params) {\r\n    return this.api('/me', Method.GET, params);\r\n  }\r\n\r\n  async getTokenDetailWithProfile(params) {\r\n    const tokenDetail = await this.getTokenDetail();\r\n    const profile = await this.getProfile(params);\r\n\r\n    return {\r\n      profile,\r\n      tokenDetail,\r\n    };\r\n  }\r\n\r\n  async getToken() {\r\n    const authResponse = await this.getTokenDetail();\r\n    return authResponse.accessToken;\r\n  }\r\n\r\n  async getUserId() {\r\n    const authResponse = await this.getTokenDetail();\r\n    return authResponse.userID;\r\n  }\r\n\r\n  async sendInvite(to, options) {\r\n    return this.ui({\r\n      to,\r\n      method: 'apprequests',\r\n      ...options,\r\n    });\r\n  }\r\n\r\n\r\n  async postAction(ogNamespace, ogAction, ogObject, ogObjectUrl, noFeedStory) {\r\n    let url = `/me/${ogNamespace}:${ogAction}?${ogObject}=${encodeURIComponent(ogObjectUrl)}`;\r\n\r\n    if (noFeedStory === true) {\r\n      url += '&no_feed_story=true';\r\n    }\r\n\r\n    return this.api(url, Method.POST);\r\n  }\r\n\r\n  async getPermissions() {\r\n    const response = await this.api('/me/permissions');\r\n    return response.data;\r\n  }\r\n\r\n  async hasPermissions(permissions) {\r\n    const usersPermissions = await this.getPermissions();\r\n\r\n    const findedPermissions = permissions.filter((p) => {\r\n      const currentPermission = usersPermissions.find((row) => {\r\n        const { permission, status } = row;\r\n        return status === 'granted' && permission === p;\r\n      });\r\n\r\n      return !!currentPermission;\r\n    });\r\n\r\n    return findedPermissions.length === permissions.length;\r\n  }\r\n\r\n  async subscribe(eventName, callback) {\r\n    const fb = await this.init();\r\n    fb.Event.subscribe(eventName, callback);\r\n  }\r\n\r\n  async unsubscribe(eventName, callback) {\r\n    const fb = await this.init();\r\n    fb.Event.unsubscribe(eventName, callback);\r\n  }\r\n\r\n  async parse(parentNode) {\r\n    const fb = await this.init();\r\n\r\n    if (typeof parentNode === 'undefined') {\r\n      fb.XFBML.parse();\r\n    } else {\r\n      fb.XFBML.parse(parentNode);\r\n    }\r\n  }\r\n\r\n  async getRequests() {\r\n    return this.api('/me/apprequests');\r\n  }\r\n\r\n  async removeRequest(requestID) {\r\n    return this.api(requestID, Method.DELETE);\r\n  }\r\n\r\n  async setAutoGrow() {\r\n    const fb = await this.init();\r\n    fb.Canvas.setAutoGrow();\r\n  }\r\n\r\n  async paySimple(product, quantity = 1) {\r\n    return this.ui({\r\n      method: 'pay',\r\n      action: 'purchaseitem',\r\n      product,\r\n      quantity,\r\n    });\r\n  }\r\n\r\n  async pay(product, options) {\r\n    return this.ui({\r\n      method: 'pay',\r\n      action: 'purchaseitem',\r\n      product,\r\n      ...options,\r\n    });\r\n  }\r\n}\r\n\r\n/*\r\n  sendToFriends: function(options, callback) {\r\n    if(!options) {\r\n      options = {};\r\n    }\r\n\r\n    options.method = 'send';\r\n\r\n    this.afterLoad(function(err, fbApi) {\r\n      if(err) {\r\n        return callback(err);\r\n      }\r\n\r\n      FB.ui(options, function(response) {\r\n        fbApi._callCallbackByResponse(callback, response);\r\n      });\r\n    });\r\n  },\r\n\r\n  sendMessage: function(message, name, caption, description, url, imgUrl, callback) {\r\n    this.afterLoad(function(err, fbApi) {\r\n      if(err) {\r\n        return callback(err);\r\n      }\r\n\r\n      FB.ui({\r\n        method: 'stream.publish',\r\n        message: message,\r\n        attachment: {\r\n          name: name,\r\n          caption: caption,\r\n          description: description,\r\n          href: url,\r\n          media:[{\r\n            type: 'image',\r\n            src:  imgUrl,\r\n            href: url\r\n          }]\r\n        },\r\n        action_links: [{\r\n          text: 'Code',\r\n          href: url\r\n        }],\r\n        user_prompt_message: message\r\n      },\r\n      function(response) {\r\n        fbApi._callCallbackByResponse(callback, response);\r\n      });\r\n    });\r\n  },\r\n\r\n  sendInviteForm: function(options, callback) {\r\n    if(typeof options === 'function') {\r\n      callback = options;\r\n      options = {};\r\n    }\r\n\r\n    this.afterLoad(function(err, fbApi) {\r\n      if(err) {\r\n        return callback(err);\r\n      }\r\n\r\n      options.method = options.method || 'apprequests';\r\n\r\n\r\n      FB.ui(options, function(response) {\r\n        fbApi._callCallbackByResponse(callback, response);\r\n      });\r\n    });\r\n  },\r\n\r\n  checkPageLike: function(pageID, callback) {\r\n    this.afterLoad(function(err, fbApi) {\r\n      if(err) {\r\n        return callback(err);\r\n      }\r\n\r\n      fbApi.getUserID(function(err, userID) {\r\n        if(err) {\r\n          return callback(err);\r\n        }\r\n\r\n        var fqlQuery = `SELECT uid FROM page_fan WHERE page_id = ${pageID} and uid = ${userID}`;\r\n        var query = FB.Data.query(fqlQuery);\r\n\r\n        query.wait(function(rows) {\r\n          if (rows.length === 1 && rows[0].uid === userID) {\r\n            callback(null, true, query);\r\n          }\r\n          else {\r\n            callback(null, false, query);\r\n          }\r\n        });\r\n      });\r\n    });\r\n  },\r\n\r\n  sendMessageToFriend: function (friendID, link, callback) {\r\n    this.afterLoad(function(err, fbApi) {\r\n      if(err) {\r\n        return callback(err);\r\n      }\r\n\r\n      FB.ui({\r\n        to: friendID,\r\n        method: 'send',\r\n        link: link\r\n      }, function(response) {\r\n        fbApi._callCallbackByResponse(callback, response);\r\n      });\r\n    });\r\n  },\r\n\r\n  _prepareUsers: function(data) {\r\n    var users=[];\r\n\r\n    for(var index in data) {\r\n      var userData=data[index];\r\n\r\n      var user = {\r\n        provider_uid: 'facebook'+'_'+userData.uid,\r\n        provider: 'facebook',\r\n        id: userData.uid,\r\n        name: userData.name,\r\n        first_name: userData.first_name,\r\n        last_name: userData.last_name,\r\n        status: (userData.status!==null) ? userData.status : null,\r\n        image: '//graph.facebook.com/'+userData.uid+'/picture?'\r\n      };\r\n\r\n      users.push(user);\r\n    }\r\n\r\n    return users;\r\n  },\r\n\r\n  getUserList: function(callback) {\r\n    this.afterLoad(function(err, fbApi) {\r\n      if(err) {\r\n        return callback(err);\r\n      }\r\n\r\n      FB.api('fql', {\r\n        q: `\r\n          SELECT uid, name, first_name, last_name, online_presence, status\r\n          FROM user\r\n          WHERE uid IN\r\n            ( SELECT uid2 FROM friend WHERE uid1 = me()) ORDER BY name\r\n        `,\r\n      }, function (response)\r\n      {\r\n        var users = fbApi._prepareUsers(response.data);\r\n        callback(null, users, response);\r\n      });\r\n    });\r\n  },\r\n\r\n  postFeed: function(options, callback) {\r\n    this.afterLoad(function(err, fbApi) {\r\n      if(err) {\r\n        return callback(err);\r\n      }\r\n\r\n      options.method='feed';\r\n\r\n      FB.ui(options, function(response) {\r\n        fbApi._callCallbackByResponse(callback, response);\r\n      });\r\n    });\r\n  },\r\n\r\n  //need publish_stream\r\n  createAlbum: function(name, description, callback) {\r\n    this.afterLoad(function(err, fbApi) {\r\n      if(err) {\r\n        return callback(err);\r\n      }\r\n\r\n      FB.api('/me/albums', 'post', {\r\n        name: name,\r\n        description: description\r\n      },function(response) {\r\n        fbApi._callCallbackByResponse(callback, response);\r\n      });\r\n    });\r\n  },\r\n\r\n  //need publish_stream\r\n  addImageToAlbum: function(albumID, imageURL, message, callback) {\r\n    this.afterLoad(function(err, fbApi) {\r\n      if(err) {\r\n        return callback(err);\r\n      }\r\n\r\n      FB.api('/'+albumID+'/photos', 'post', {\r\n        message: message,\r\n        url: imageURL\r\n      }, function(response) {\r\n        fbApi._callCallbackByResponse(callback, response);\r\n      });\r\n    });\r\n  },\r\n\r\n  //'user_photos'\r\n  getAlbums: function(callback) {\r\n    this.afterLoad(function(err, fbApi) {\r\n      if(err) {\r\n        return callback(err);\r\n      }\r\n\r\n      FB.api('/me/albums', function(response) {\r\n        fbApi._callCallbackByResponse(callback, response);\r\n      });\r\n    });\r\n  },\r\n\r\n  //'user_photos'\r\n  getAlbumPhotos: function(albumID, callback) {\r\n    this.afterLoad(function(err, fbApi) {\r\n      if(err) {\r\n        return callback(err);\r\n      }\r\n\r\n      FB.api('/'+albumID+'/photos', function(response) {\r\n        fbApi._callCallbackByResponse(callback, response);\r\n      });\r\n    });\r\n  },\r\n\r\n  //'user_photos'\r\n  getAlbumCoverPicture: function(albumID, callback) {\r\n    this.afterLoad(function(err, fbApi) {\r\n      if(err) {\r\n        return callback(err);\r\n      }\r\n\r\n      FB.api('/'+albumID+'/picture', function(response) {\r\n        fbApi._callCallbackByResponse(callback, response);\r\n      });\r\n    });\r\n  },\r\n\r\n  //'publish_stream'\r\n  postPhoto: function(photoUrl, message, callback) {\r\n    this.afterLoad(function(err, fbApi) {\r\n      if(err) {\r\n        return callback(err);\r\n      }\r\n\r\n      FB.api('/me/photos', 'post', {\r\n        message: message,\r\n        url: photoUrl\r\n      },function(response) {\r\n        fbApi._callCallbackByResponse(callback, response);\r\n      });\r\n    });\r\n  },\r\n\r\n  getPageInfo: function(callback) {\r\n    this.afterLoad(function(err, fbApi) {\r\n      if(err) {\r\n        return callback(err);\r\n      }\r\n\r\n      FB.Canvas.getPageInfo(function(response) {\r\n        fbApi._callCallbackByResponse(callback, response);\r\n      });\r\n    });\r\n  }\r\n*/\r\n"]}