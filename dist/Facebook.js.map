{"version":3,"sources":["../src/Facebook.js"],"names":["Method","GET","POST","DELETE","Facebook","constructor","options","domain","version","cookie","status","xfbml","language","frictionlessRequests","appId","Error","wait","init","getAppId","loadingPromise","Promise","resolve","window","fbAsyncInit","FB","fjs","document","getElementsByTagName","getElementById","js","createElement","id","async","src","parentNode","insertBefore","process","method","before","after","fb","reject","response","error","code","type","message","ui","api","path","params","login","opts","logout","getLoginStatus","getAuthResponse","getTokenDetail","LoginStatus","CONNECTED","authResponse","getProfile","getTokenDetailWithProfile","tokenDetail","profile","getToken","accessToken","getUserId","userID","sendInvite","to","postAction","ogNamespace","ogAction","ogObject","ogObjectUrl","noFeedStory","url","encodeURIComponent","getPermissions","data","hasPermissions","permissions","usersPermissions","findedPermissions","filter","p","currentPermission","find","row","permission","length","subscribe","eventName","callback","Event","unsubscribe","parse","XFBML","getRequests","removeRequest","requestID","setAutoGrow","Canvas","paySimple","product","quantity","action","pay"],"mappings":"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","file":"Facebook.js","sourcesContent":["// @flow\r\nimport LoginStatus from './constants/LoginStatus';\r\n\r\nexport const Method = {\r\n  GET: 'get',\r\n  POST: 'post',\r\n  DELETE: 'delete',\r\n};\r\n\r\nexport default class Facebook {\r\n  constructor(options = {}) {\r\n    this.options = {\r\n      domain: 'connect.facebook.net',\r\n      version: 'v3.1',\r\n      cookie: false,\r\n      status: false,\r\n      xfbml: false,\r\n      language: 'en_US',\r\n      frictionlessRequests: false,\r\n      ...options,\r\n    };\r\n\r\n    if (!this.options.appId) {\r\n      throw new Error('You need to set appId');\r\n    }\r\n\r\n    if (!this.options.wait) {\r\n      this.init();\r\n    }\r\n  }\r\n\r\n  getAppId(): string {\r\n    return this.options.appId;\r\n  }\r\n\r\n  async init() {\r\n    if (this.loadingPromise) {\r\n      return this.loadingPromise;\r\n    }\r\n\r\n    this.loadingPromise = new Promise((resolve) => {\r\n      const { options } = this;\r\n\r\n      window.fbAsyncInit = () => {\r\n        window.FB.init({\r\n          appId: options.appId,\r\n          version: options.version,\r\n          cookie: options.cookie,\r\n          status: options.status,\r\n          xfbml: options.xfbml,\r\n          frictionlessRequests: this.frictionlessRequests,\r\n        });\r\n\r\n        resolve(window.FB);\r\n      };\r\n\r\n      const fjs = window.document.getElementsByTagName('script')[0];\r\n      if (!fjs) {\r\n        return;\r\n      }\r\n\r\n      if (window.document.getElementById('facebook-jssdk')) {\r\n        return;\r\n      }\r\n\r\n      const js = window.document.createElement('script');\r\n      js.id = 'facebook-jssdk';\r\n      js.async = true;\r\n      js.src = `https://${options.domain}/${options.language}/sdk/xfbml.customerchat.js`;\r\n\r\n      fjs.parentNode.insertBefore(js, fjs);\r\n    });\r\n\r\n    return this.loadingPromise;\r\n  }\r\n\r\n  async process(method, before = [], after = []) {\r\n    const fb = await this.init();\r\n\r\n    return new Promise((resolve, reject) => {\r\n      fb[method](...before, (response) => {\r\n        if (!response) {\r\n          reject(new Error('Response is undefined'));\r\n        } else if (response.error) {\r\n          const { code, type, message } = response.error;\r\n\r\n          const error = new Error(message);\r\n          error.code = code;\r\n          error.type = type;\r\n\r\n          reject(error);\r\n        } else {\r\n          resolve(response);\r\n        }\r\n      }, ...after);\r\n    });\r\n  }\r\n\r\n  async ui(options) {\r\n    return this.process('ui', [options]);\r\n  }\r\n\r\n  async api(path, method = Method.GET, params = {}) {\r\n    return this.process('api', [path, method, params]);\r\n  }\r\n\r\n  async login(opts = null) {\r\n    return this.process('login', [], [opts]);\r\n  }\r\n\r\n  async logout() {\r\n    return this.process('logout');\r\n  }\r\n\r\n  async getLoginStatus() {\r\n    return this.process('getLoginStatus');\r\n  }\r\n\r\n  async getAuthResponse() {\r\n    return this.process('getAuthResponse');\r\n  }\r\n\r\n  async getTokenDetail() {\r\n    const response = await this.getLoginStatus();\r\n    if (response.status === LoginStatus.CONNECTED && response.authResponse) {\r\n      return response.authResponse;\r\n    }\r\n\r\n    throw new Error('Token is undefined');\r\n  }\r\n\r\n  async getProfile(params) {\r\n    return this.api('/me', Method.GET, params);\r\n  }\r\n\r\n  async getTokenDetailWithProfile(params) {\r\n    const tokenDetail = await this.getTokenDetail();\r\n    const profile = await this.getProfile(params);\r\n\r\n    return {\r\n      profile,\r\n      tokenDetail,\r\n    };\r\n  }\r\n\r\n  async getToken() {\r\n    const authResponse = await this.getTokenDetail();\r\n    return authResponse.accessToken;\r\n  }\r\n\r\n  async getUserId() {\r\n    const authResponse = await this.getTokenDetail();\r\n    return authResponse.userID;\r\n  }\r\n\r\n  async sendInvite(to, options) {\r\n    return this.ui({\r\n      to,\r\n      method: 'apprequests',\r\n      ...options,\r\n    });\r\n  }\r\n\r\n\r\n  async postAction(ogNamespace, ogAction, ogObject, ogObjectUrl, noFeedStory) {\r\n    let url = `/me/${ogNamespace}:${ogAction}?${ogObject}=${encodeURIComponent(ogObjectUrl)}`;\r\n\r\n    if (noFeedStory === true) {\r\n      url += '&no_feed_story=true';\r\n    }\r\n\r\n    return this.api(url, Method.POST);\r\n  }\r\n\r\n  async getPermissions() {\r\n    const response = await this.api('/me/permissions');\r\n    return response.data;\r\n  }\r\n\r\n  async hasPermissions(permissions) {\r\n    const usersPermissions = await this.getPermissions();\r\n\r\n    const findedPermissions = permissions.filter((p) => {\r\n      const currentPermission = usersPermissions.find((row) => {\r\n        const { permission, status } = row;\r\n        return status === 'granted' && permission === p;\r\n      });\r\n\r\n      return !!currentPermission;\r\n    });\r\n\r\n    return findedPermissions.length === permissions.length;\r\n  }\r\n\r\n  async subscribe(eventName, callback) {\r\n    const fb = await this.init();\r\n    fb.Event.subscribe(eventName, callback);\r\n  }\r\n\r\n  async unsubscribe(eventName, callback) {\r\n    const fb = await this.init();\r\n    fb.Event.unsubscribe(eventName, callback);\r\n  }\r\n\r\n  async parse(parentNode) {\r\n    const fb = await this.init();\r\n\r\n    if (typeof parentNode === 'undefined') {\r\n      fb.XFBML.parse();\r\n    } else {\r\n      fb.XFBML.parse(parentNode);\r\n    }\r\n  }\r\n\r\n  async getRequests() {\r\n    return this.api('/me/apprequests');\r\n  }\r\n\r\n  async removeRequest(requestID) {\r\n    return this.api(requestID, Method.DELETE);\r\n  }\r\n\r\n  async setAutoGrow() {\r\n    const fb = await this.init();\r\n    fb.Canvas.setAutoGrow();\r\n  }\r\n\r\n  async paySimple(product, quantity = 1) {\r\n    return this.ui({\r\n      method: 'pay',\r\n      action: 'purchaseitem',\r\n      product,\r\n      quantity,\r\n    });\r\n  }\r\n\r\n  async pay(product, options) {\r\n    return this.ui({\r\n      method: 'pay',\r\n      action: 'purchaseitem',\r\n      product,\r\n      ...options,\r\n    });\r\n  }\r\n}\r\n\r\n/*\r\n  sendToFriends: function(options, callback) {\r\n    if(!options) {\r\n      options = {};\r\n    }\r\n\r\n    options.method = 'send';\r\n\r\n    this.afterLoad(function(err, fbApi) {\r\n      if(err) {\r\n        return callback(err);\r\n      }\r\n\r\n      FB.ui(options, function(response) {\r\n        fbApi._callCallbackByResponse(callback, response);\r\n      });\r\n    });\r\n  },\r\n\r\n  sendMessage: function(message, name, caption, description, url, imgUrl, callback) {\r\n    this.afterLoad(function(err, fbApi) {\r\n      if(err) {\r\n        return callback(err);\r\n      }\r\n\r\n      FB.ui({\r\n        method: 'stream.publish',\r\n        message: message,\r\n        attachment: {\r\n          name: name,\r\n          caption: caption,\r\n          description: description,\r\n          href: url,\r\n          media:[{\r\n            type: 'image',\r\n            src:  imgUrl,\r\n            href: url\r\n          }]\r\n        },\r\n        action_links: [{\r\n          text: 'Code',\r\n          href: url\r\n        }],\r\n        user_prompt_message: message\r\n      },\r\n      function(response) {\r\n        fbApi._callCallbackByResponse(callback, response);\r\n      });\r\n    });\r\n  },\r\n\r\n  sendInviteForm: function(options, callback) {\r\n    if(typeof options === 'function') {\r\n      callback = options;\r\n      options = {};\r\n    }\r\n\r\n    this.afterLoad(function(err, fbApi) {\r\n      if(err) {\r\n        return callback(err);\r\n      }\r\n\r\n      options.method = options.method || 'apprequests';\r\n\r\n\r\n      FB.ui(options, function(response) {\r\n        fbApi._callCallbackByResponse(callback, response);\r\n      });\r\n    });\r\n  },\r\n\r\n  checkPageLike: function(pageID, callback) {\r\n    this.afterLoad(function(err, fbApi) {\r\n      if(err) {\r\n        return callback(err);\r\n      }\r\n\r\n      fbApi.getUserID(function(err, userID) {\r\n        if(err) {\r\n          return callback(err);\r\n        }\r\n\r\n        var fqlQuery = `SELECT uid FROM page_fan WHERE page_id = ${pageID} and uid = ${userID}`;\r\n        var query = FB.Data.query(fqlQuery);\r\n\r\n        query.wait(function(rows) {\r\n          if (rows.length === 1 && rows[0].uid === userID) {\r\n            callback(null, true, query);\r\n          }\r\n          else {\r\n            callback(null, false, query);\r\n          }\r\n        });\r\n      });\r\n    });\r\n  },\r\n\r\n  sendMessageToFriend: function (friendID, link, callback) {\r\n    this.afterLoad(function(err, fbApi) {\r\n      if(err) {\r\n        return callback(err);\r\n      }\r\n\r\n      FB.ui({\r\n        to: friendID,\r\n        method: 'send',\r\n        link: link\r\n      }, function(response) {\r\n        fbApi._callCallbackByResponse(callback, response);\r\n      });\r\n    });\r\n  },\r\n\r\n  _prepareUsers: function(data) {\r\n    var users=[];\r\n\r\n    for(var index in data) {\r\n      var userData=data[index];\r\n\r\n      var user = {\r\n        provider_uid: 'facebook'+'_'+userData.uid,\r\n        provider: 'facebook',\r\n        id: userData.uid,\r\n        name: userData.name,\r\n        first_name: userData.first_name,\r\n        last_name: userData.last_name,\r\n        status: (userData.status!==null) ? userData.status : null,\r\n        image: '//graph.facebook.com/'+userData.uid+'/picture?'\r\n      };\r\n\r\n      users.push(user);\r\n    }\r\n\r\n    return users;\r\n  },\r\n\r\n  getUserList: function(callback) {\r\n    this.afterLoad(function(err, fbApi) {\r\n      if(err) {\r\n        return callback(err);\r\n      }\r\n\r\n      FB.api('fql', {\r\n        q: `\r\n          SELECT uid, name, first_name, last_name, online_presence, status\r\n          FROM user\r\n          WHERE uid IN\r\n            ( SELECT uid2 FROM friend WHERE uid1 = me()) ORDER BY name\r\n        `,\r\n      }, function (response)\r\n      {\r\n        var users = fbApi._prepareUsers(response.data);\r\n        callback(null, users, response);\r\n      });\r\n    });\r\n  },\r\n\r\n  postFeed: function(options, callback) {\r\n    this.afterLoad(function(err, fbApi) {\r\n      if(err) {\r\n        return callback(err);\r\n      }\r\n\r\n      options.method='feed';\r\n\r\n      FB.ui(options, function(response) {\r\n        fbApi._callCallbackByResponse(callback, response);\r\n      });\r\n    });\r\n  },\r\n\r\n  //need publish_stream\r\n  createAlbum: function(name, description, callback) {\r\n    this.afterLoad(function(err, fbApi) {\r\n      if(err) {\r\n        return callback(err);\r\n      }\r\n\r\n      FB.api('/me/albums', 'post', {\r\n        name: name,\r\n        description: description\r\n      },function(response) {\r\n        fbApi._callCallbackByResponse(callback, response);\r\n      });\r\n    });\r\n  },\r\n\r\n  //need publish_stream\r\n  addImageToAlbum: function(albumID, imageURL, message, callback) {\r\n    this.afterLoad(function(err, fbApi) {\r\n      if(err) {\r\n        return callback(err);\r\n      }\r\n\r\n      FB.api('/'+albumID+'/photos', 'post', {\r\n        message: message,\r\n        url: imageURL\r\n      }, function(response) {\r\n        fbApi._callCallbackByResponse(callback, response);\r\n      });\r\n    });\r\n  },\r\n\r\n  //'user_photos'\r\n  getAlbums: function(callback) {\r\n    this.afterLoad(function(err, fbApi) {\r\n      if(err) {\r\n        return callback(err);\r\n      }\r\n\r\n      FB.api('/me/albums', function(response) {\r\n        fbApi._callCallbackByResponse(callback, response);\r\n      });\r\n    });\r\n  },\r\n\r\n  //'user_photos'\r\n  getAlbumPhotos: function(albumID, callback) {\r\n    this.afterLoad(function(err, fbApi) {\r\n      if(err) {\r\n        return callback(err);\r\n      }\r\n\r\n      FB.api('/'+albumID+'/photos', function(response) {\r\n        fbApi._callCallbackByResponse(callback, response);\r\n      });\r\n    });\r\n  },\r\n\r\n  //'user_photos'\r\n  getAlbumCoverPicture: function(albumID, callback) {\r\n    this.afterLoad(function(err, fbApi) {\r\n      if(err) {\r\n        return callback(err);\r\n      }\r\n\r\n      FB.api('/'+albumID+'/picture', function(response) {\r\n        fbApi._callCallbackByResponse(callback, response);\r\n      });\r\n    });\r\n  },\r\n\r\n  //'publish_stream'\r\n  postPhoto: function(photoUrl, message, callback) {\r\n    this.afterLoad(function(err, fbApi) {\r\n      if(err) {\r\n        return callback(err);\r\n      }\r\n\r\n      FB.api('/me/photos', 'post', {\r\n        message: message,\r\n        url: photoUrl\r\n      },function(response) {\r\n        fbApi._callCallbackByResponse(callback, response);\r\n      });\r\n    });\r\n  },\r\n\r\n  getPageInfo: function(callback) {\r\n    this.afterLoad(function(err, fbApi) {\r\n      if(err) {\r\n        return callback(err);\r\n      }\r\n\r\n      FB.Canvas.getPageInfo(function(response) {\r\n        fbApi._callCallbackByResponse(callback, response);\r\n      });\r\n    });\r\n  }\r\n*/\r\n"]}