{"version":3,"sources":["../src/Process.jsx"],"names":["Process","Component","state","api","undefined","handleProcess","fn","setState","data","error","loading","Error","handleReady","render","children","props"],"mappings":";;;;;;;;;;AACA;;;;AACA;;;;;;AAae,MAAMA,OAAN,SAAsBC,gBAAtB,CAA8C;AAAA;AAAA;;AAAA,gDAC3DC,KAD2D,GAC5C;AACbC,WAAKC;AADQ,KAD4C,OAK3DC,aAL2D;AAAA,iDAK3C,WAAOC,EAAP,EAAsC;AACpD,cAAKC,QAAL,CAAc;AACZC,gBAAMJ,SADM;AAEZK,iBAAOL,SAFK;AAGZM,mBAAS;AAHG,SAAd;;AAMA,YAAI;AACF,gBAAM,EAAEP,GAAF,KAAU,MAAKD,KAArB;AACA,cAAI,CAACC,GAAL,EAAU;AACR,kBAAM,IAAIQ,KAAJ,CAAU,+CAAV,CAAN;AACD;;AAED,gBAAMH,OAAO,MAAMF,GAAGH,GAAH,CAAnB;;AAEA,gBAAKI,QAAL,CAAc;AACZC,gBADY;AAEZE,qBAAS;AAFG,WAAd;;AAKA,iBAAOF,IAAP;AACD,SAdD,CAcE,OAAOC,KAAP,EAAc;AACd,gBAAKF,QAAL,CAAc;AACZE,iBADY;AAEZC,qBAAS;AAFG,WAAd;;AAKA,gBAAMD,KAAN;AACD;AACF,OAlC0D;;AAAA;AAAA;AAAA;AAAA,eAoC3DG,WApC2D,GAoC5CT,GAAD,IAAuB;AACnC,WAAKI,QAAL,CAAc;AACZJ;AADY,OAAd;AAGD,KAxC0D;AAAA;;AA0C3DU,WAAS;AACP,UAAM,EAAEC,QAAF,KAAe,KAAKC,KAA1B;AACA,UAAM;AACJZ,SADI,EACCO,OADD,EACUF,IADV,EACgBC;AADhB,QAEF,KAAKP,KAFT;;AAIA,WACE;AAAC,0BAAD;AAAA,QAAY,SAAS,KAAKU,WAA1B;AACGE,eAAS;AACRJ,iBAAS,CAACP,GAAD,IAAQO,OADT;AAERL,uBAAe,KAAKA,aAFZ;AAGRG,YAHQ;AAIRC;AAJQ,OAAT;AADH,KADF;AAUD;AA1D0D;kBAAxCT,O","file":"Process.js","sourcesContent":["// @flow\r\nimport React, { Component } from 'react';\r\nimport Initialize from './Initialize';\r\n\r\nexport type Props = {\r\n  children: Function,\r\n};\r\n\r\ntype State = {\r\n  api?: Object,\r\n  isProcessing?: boolean,\r\n  error?: Error,\r\n  data?: any,\r\n};\r\n\r\nexport default class Process extends Component<Props, State> {\r\n  state: State = {\r\n    api: undefined,\r\n  };\r\n\r\n  handleProcess = async (fn: Function): Promise<any> => {\r\n    this.setState({\r\n      data: undefined,\r\n      error: undefined,\r\n      loading: true,\r\n    });\r\n\r\n    try {\r\n      const { api } = this.state;\r\n      if (!api) {\r\n        throw new Error('Facebook is not initialized. Wait for isReady');\r\n      }\r\n\r\n      const data = await fn(api);\r\n\r\n      this.setState({\r\n        data,\r\n        loading: false,\r\n      });\r\n\r\n      return data;\r\n    } catch (error) {\r\n      this.setState({\r\n        error,\r\n        loading: false,\r\n      });\r\n\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  handleReady = (api: Object): void => {\r\n    this.setState({\r\n      api,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n    const {\r\n      api, loading, data, error,\r\n    } = this.state;\r\n\r\n    return (\r\n      <Initialize onReady={this.handleReady}>\r\n        {children({\r\n          loading: !api || loading,\r\n          handleProcess: this.handleProcess,\r\n          data,\r\n          error,\r\n        })}\r\n      </Initialize>\r\n    );\r\n  }\r\n}\r\n"]}