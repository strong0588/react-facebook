{"version":3,"sources":["../src/Subscribe.jsx"],"names":["LoginStatus","Component","componentWillUnmount","state","api","props","event","unsubscribe","handleChange","render","children","handleReady","defaultProps","onChange","undefined","setState","subscribe","args"],"mappings":";;;;;;;;;;AACA;;;;AACA;;;;;;AAYe,MAAMA,WAAN,SAA0BC,gBAA1B,CAAkD;AAAA;AAAA;;AAAA;AAAA;;AAO/DC,yBAAuB;AACrB,UAAM,EAAEC,OAAO,EAAEC,GAAF,EAAT,EAAkBC,OAAO,EAAEC,KAAF,EAAzB,KAAuC,IAA7C;AACA,QAAIF,GAAJ,EAAS;AACPA,UAAIG,WAAJ,CAAgBD,KAAhB,EAAuB,KAAKE,YAA5B;AACD;AACF;;AAoBDC,WAAS;AACP,UAAM,EAAEC,QAAF,KAAe,KAAKL,KAA1B;;AAEA,WACE;AAAC,0BAAD;AAAA,QAAY,SAAS,KAAKM,WAA1B;AACGD;AADH,KADF;AAKD;AAxC8D;kBAA5CV,W;AAAAA,W,CACZY,Y,GAAe;AACpBC,YAAUC;AADU,C;;;;;OAItBX,K,GAAe,E;;OASfQ,W;+CAAc,WAAOP,GAAP,EAAsC;AAClD,YAAM,EAAEE,KAAF,KAAY,MAAKD,KAAvB;;AAEA,YAAKU,QAAL,CAAc;AACZX;AADY,OAAd;;AAIA,YAAMA,IAAIY,SAAJ,CAAcV,KAAd,EAAqB,MAAKE,YAA1B,CAAN;AACD,K;;;;;;;OAEDA,Y,GAAe,CAAC,GAAGS,IAAJ,KAAmB;AAChC,UAAM,EAAEJ,QAAF,KAAe,KAAKR,KAA1B;;AAEA,QAAIQ,QAAJ,EAAc;AACZA,eAAS,GAAGI,IAAZ;AACD;AACF,G","file":"Subscribe.js","sourcesContent":["// @flow\r\nimport React, { Component, type Node } from 'react';\r\nimport Initialize from './Initialize';\r\n\r\ntype Props = {\r\n  children: Node,\r\n  onChange?: Function,\r\n  event: string,\r\n};\r\n\r\ntype State = {\r\n  api?: Object,\r\n};\r\n\r\nexport default class LoginStatus extends Component<Props, State> {\r\n  static defaultProps = {\r\n    onChange: undefined,\r\n  };\r\n\r\n  state: State = {};\r\n\r\n  componentWillUnmount() {\r\n    const { state: { api }, props: { event } } = this;\r\n    if (api) {\r\n      api.unsubscribe(event, this.handleChange);\r\n    }\r\n  }\r\n\r\n  handleReady = async (api: Object): Promise<void> => {\r\n    const { event } = this.props;\r\n\r\n    this.setState({\r\n      api,\r\n    });\r\n\r\n    await api.subscribe(event, this.handleChange);\r\n  }\r\n\r\n  handleChange = (...args): void => {\r\n    const { onChange } = this.props;\r\n\r\n    if (onChange) {\r\n      onChange(...args);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n\r\n    return (\r\n      <Initialize onReady={this.handleReady}>\r\n        {children}\r\n      </Initialize>\r\n    );\r\n  }\r\n}\r\n"]}