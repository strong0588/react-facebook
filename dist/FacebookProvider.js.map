{"version":3,"sources":["../src/FacebookProvider.jsx"],"names":["FacebookContext","api","Facebook","Component","state","isReady","handleInit","canUseDOM","Error","domain","version","appId","cookie","status","xfbml","language","frictionlessRequests","wait","props","FB","init","setState","componentDidMount","componentDidCatch","error","info","console","log","render","children","value","defaultProps","undefined"],"mappings":";;;;;;;;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEO,MAAMA,4CAAkB,2BAAxB;;AACP,IAAIC,MAAM,IAAV;;AAmBe,MAAMC,QAAN,SAAuBC,gBAAvB,CAA+C;AAAA;AAAA;;AAAA,gDAa5DC,KAb4D,GAa7C;AACbC,eAAS;AADI,KAb6C,OA8B5DC,UA9B4D,mCA8B/C,aAAyB;AACpC;AACA,UAAI,CAACC,mBAAL,EAAgB;AACd,cAAM,IAAIC,KAAJ,CAAU,sCAAV,CAAN;AACD;;AAED,YAAM,EAAEH,OAAF,KAAc,MAAKD,KAAzB;AACA,UAAIC,OAAJ,EAAa;AACX,eAAOJ,GAAP;AACD;;AAED,UAAI,CAACA,GAAL,EAAU;AACR,cAAM;AACJQ,gBADI;AAEJC,iBAFI;AAGJC,eAHI;AAIJC,gBAJI;AAKJC,gBALI;AAMJC,eANI;AAOJC,kBAPI;AAQJC,8BARI;AASJC;AATI,YAUF,MAAKC,KAVT;;AAYAjB,cAAM,IAAIkB,kBAAJ,CAAO;AACXV,gBADW;AAEXE,eAFW;AAGXD,iBAHW;AAIXE,gBAJW;AAKXC,gBALW;AAMXC,eANW;AAOXC,kBAPW;AAQXC,8BARW;AASXC;AATW,SAAP,CAAN;AAWD;;AAED,YAAMhB,IAAImB,IAAJ,EAAN;;AAEA,UAAI,CAAC,MAAKhB,KAAL,CAAWC,OAAhB,EAAyB;AACvB,cAAKgB,QAAL,CAAc;AACZhB,mBAAS;AADG,SAAd;AAGD;;AAED,aAAOJ,GAAP;AACD,KA5E2D;AAAA;;AAkB5DqB,sBAA0B;AACxB,UAAM,EAAEL,IAAF,KAAW,KAAKC,KAAtB;AACA,QAAI,CAACD,IAAL,EAAW;AACT,WAAKX,UAAL;AACD;AACF;;AAECiB,oBAAkBC,KAAlB,EAAyBC,IAAzB,EAA+B;AAC3B;AACAC,YAAQC,GAAR,CAAYH,KAAZ,EAAmBC,IAAnB;AACH;;AAkDHG,WAAS;AACP,UAAM,EAAEC,QAAF,KAAe,KAAKX,KAA1B;AACA,UAAM,EAAEb,OAAF,EAAWmB,KAAX,KAAqB,KAAKpB,KAAhC;AACA,UAAM,EAAEE,UAAF,KAAiB,IAAvB;;AAEA,UAAMwB,QAAQ;AACZzB,aADY;AAEZmB,WAFY;AAGZlB,gBAHY;AAIZL;AAJY,KAAd;;AAOA,WACE;AAAC,qBAAD,CAAiB,QAAjB;AAAA,QAA0B,OAAO6B,KAAjC;AACGD;AADH,KADF;AAKD;AA/F2D;kBAAzC3B,Q;AAAAA,Q,CACZ6B,Y,GAAe;AACpBrB,WAAS,MADW;AAEpBE,UAAQ,KAFY;AAGpBC,UAAQ,KAHY;AAIpBC,SAAO,KAJa;AAKpBC,YAAU,OALU;AAMpBC,wBAAsB,KANF;AAOpBP,UAAQ,sBAPY;AAQpBoB,YAAUG,SARU;AASpBf,QAAM;AATc,C","file":"FacebookProvider.js","sourcesContent":["// @flow\r\nimport React, { Component, createContext, type Node } from 'react';\r\nimport canUseDOM from 'can-use-dom';\r\nimport FB from './Facebook';\r\n\r\nexport const FacebookContext = createContext();\r\nlet api = null;\r\n\r\ntype Props = {\r\n  appId: string,\r\n  domain?: string,\r\n  version?: string,\r\n  cookie?: boolean,\r\n  status?: boolean,\r\n  xfbml?: boolean,\r\n  language?: string,\r\n  frictionlessRequests?: boolean,\r\n  children?: Node,\r\n  wait?: boolean,\r\n};\r\n\r\ntype State = {\r\n  isReady: boolean,\r\n};\r\n\r\nexport default class Facebook extends Component<Props, State> {\r\n  static defaultProps = {\r\n    version: 'v3.1',\r\n    cookie: false,\r\n    status: false,\r\n    xfbml: false,\r\n    language: 'en_US',\r\n    frictionlessRequests: false,\r\n    domain: 'connect.facebook.net',\r\n    children: undefined,\r\n    wait: false,\r\n  };\r\n\r\n  state: State = {\r\n    isReady: false,\r\n  };\r\n\r\n\r\n  componentDidMount(): void {\r\n    const { wait } = this.props;\r\n    if (!wait) {\r\n      this.handleInit();\r\n    }\r\n  }\r\n\r\n    componentDidCatch(error, info) {\r\n        // You can also log the error to an error reporting service\r\n        console.log(error, info);\r\n    }\r\n\r\n  handleInit = async (): Promise<FB> => {\r\n    // do not run if SSR\r\n    if (!canUseDOM) {\r\n      throw new Error('You can not use Facebook without DOM');\r\n    }\r\n\r\n    const { isReady } = this.state;\r\n    if (isReady) {\r\n      return api;\r\n    }\r\n\r\n    if (!api) {\r\n      const {\r\n        domain,\r\n        version,\r\n        appId,\r\n        cookie,\r\n        status,\r\n        xfbml,\r\n        language,\r\n        frictionlessRequests,\r\n        wait,\r\n      } = this.props;\r\n\r\n      api = new FB({\r\n        domain,\r\n        appId,\r\n        version,\r\n        cookie,\r\n        status,\r\n        xfbml,\r\n        language,\r\n        frictionlessRequests,\r\n        wait,\r\n      });\r\n    }\r\n\r\n    await api.init();\r\n\r\n    if (!this.state.isReady) {\r\n      this.setState({\r\n        isReady: true,\r\n      });\r\n    }\r\n\r\n    return api;\r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n    const { isReady, error } = this.state;\r\n    const { handleInit } = this;\r\n\r\n    const value = {\r\n      isReady,\r\n      error,\r\n      handleInit,\r\n      api,\r\n    };\r\n\r\n    return (\r\n      <FacebookContext.Provider value={value}>\r\n        {children}\r\n      </FacebookContext.Provider>\r\n    );\r\n  }\r\n}\r\n"]}